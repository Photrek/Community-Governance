openapi: 3.0.0
info:
  title: Voting Portal API
  description: API for retrieving funding rounds, pools, and proposals.
  version: 1.0.1
servers:
  - url: https://deepfunding.ai/wp-json/deepfunding/v1
paths:
  /rounds:
    get:
      summary: Retrieves a list of funding rounds.
      responses:
        '200':
          description: A list of funding rounds.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: Unique identifier for the round.
                    pool_id:
                      type: integer
                      description: Unique identifier of the pool associated with the round.
                    name:
                      type: string
                      description: Name of the round.
                    slug:
                      type: string
                      description: Slug of the round.
                    description:
                      type: string
                      description: Description of the round.
  /pools:
    get:
      summary: Retrieves a list of funding pools.
      responses:
        '200':
          description: A list of funding pools.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: Unique identifier for the pool.
                    name:
                      type: string
                      description: Name of the pool.
                    slug:
                      type: string
                      description: Slug of the pool.
                    max_funding_in_pool:
                      type: integer
                      description: Maximum funding allowed in the pool.
                    description:
                      type: string
                      description: Description of the pool.
  /users:
    get:
      summary: Retrieves details of subscriber users.
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: Page number for pagination.
        - in: query
          name: limit
          required: false
          schema:
            type: integer
            default: 25
          description: Maximum number of users per page.
      responses:
        '200':
          description: Details of subscriber users.
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        user_id:
                          type: integer
                          description: ID of the user.
                        user_name:
                          type: string
                          description: Display name of the user.
                        email:
                          type: string
                          description: Email address of the user.
                        wallet_address:
                          type: string
                          description: Wallet address of the user, if available.
                        created_at:
                          type: string
                          description: Timestamp when the user was created.

  /rounds/{round_id}/proposals:
    get:
      summary: Retrieves proposals for a specific funding round.
      parameters:
        - in: path
          name: round_id
          required: true
          schema:
            type: integer
          description: ID of the round for which proposals are requested.
        - in: query
          name: pool_id
          required: false
          schema:
            type: integer
          description: ID of the pool for which proposals are requested.
      responses:
        '200':
          description: Proposals for the specified funding round.
          content:
            application/json:
              schema:
                type: object
                properties:
                  proposals:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: Unique identifier for the proposal.
                        pool_id:
                          type: integer
                          description: Id of the pool related to the proposal.
                        proposer_id:
                          type: string
                          description: ID of the proposer.
                        title:
                          type: string
                          description: Title of the proposal.
                        content:
                          type: string
                          description: Content of the proposal.
                        link:
                          type: string
                          description: URL link to the proposal.
                        feature_image:
                          type: string
                          description: URL of the featured image for the proposal.
                        requested_amount:
                          type: integer
                          description: Amount requested in the proposal.
                        awarded_amount:
                          type: integer
                          description: Amount awarded in the proposal.
                        is_awarded:
                          type: boolean
                          description: Indicates whether the proposal is awarded.
                        created_at:
                          type: string
                          description: Timestamp when the proposal was created.
                        updated_at:
                          type: string
                          description: Timestamp when the proposal was last updated.
  /proposals/{proposal_id}/milestones:
    get:
      summary: Retrieves milestones for a single proposal based on the provided proposal ID.
      parameters:
        - in: path
          name: proposal_id
          required: true
          schema:
            type: integer
          description: ID of the proposal for which milestones are requested.
      responses:
        '200':
          description: Milestones for the specified proposal.
          content:
            application/json:
              schema:
                type: object
                properties:
                  milestones:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                          description: Title of the milestone.
                        status:
                          type: string
                          description: Status of the milestone.
                        description:
                          type: string
                          description: Description of the milestone.
                        development_description:
                          type: string
                          description: Development description of the milestone.
                        budget:
                          type: string
                          description: Budget allocated for the milestone.
                        created_at:
                          type: string
                          description: Timestamp when the milestone was created.
                        updated_at:
                          type: string
                          description: Timestamp when the milestone was last updated.
  /proposals/{proposal_id}/reviews:
    get:
      summary: Retrieves reviews for a specific proposal.
      parameters:
        - in: path
          name: proposal_id
          required: true
          schema:
            type: integer
          description: ID of the proposal for which reviews are requested.
        - in: query
          name: type
          required: false
          schema:
            type: string
            enum: [expert, community]
          description: Filter for review type (expert or community).
      responses:
        '200':
          description: Reviews for the specified proposal.
          content:
            application/json:
              schema:
                type: object
                properties:
                  reviews:
                    type: array
                    items:
                      type: object
                      properties:
                        review_id:
                          type: integer
                          description: ID of the review.
                        reviewer_id:
                          type: integer
                          description: user ID of the reviewer.
                        review_type:
                          type: string
                          description: Type of review (e.g., peer review, ratings review).
                        overall_rating:
                          type: integer
                          description: Overall rating given in the review.
                        feasibility_rating:
                          type: integer
                          description: Feasibility rating given in the review.
                        viability_rating:
                          type: integer
                          description: Viability rating given in the review.
                        desirability_rating:
                          type: integer
                          description: Desirability rating given in the review.
                        usefulness_rating:
                          type: integer
                          description: Usefulness rating given in the review.
                        created_at:
                          type: string
                          description: Timestamp when the review was created.
  /comments:
    get:
      summary: Retrieves comments based on filter criteria.
      description:
        If no parameters are provided, all comments will be returned.
      parameters:
        - in: query
          name: user_id
          required: false
          schema:
            type: integer
          description: ID of the user for whom comments are requested.
        - in: query
          name: proposal_id
          required: false
          schema:
            type: integer
          description: ID of the proposal for which comments are requested.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: Page number for pagination.
        - in: query
          name: limit
          required: false
          schema:
            type: integer
            default: 25
          description: Maximum number of comments per page.
      responses:
        '200':
          description: Comments based on filter criteria.
          content:
            application/json:
              schema:
                type: object
                properties:
                  comments:
                    type: array
                    items:
                      type: object
                      properties:
                        comment_id:
                          type: integer
                          description: ID of the comment.
                        user_id:
                          type: integer
                          description: ID of the user who made the comment.
                        proposal_id:
                          type: integer
                          description: ID of the proposal associated with the comment.
                        content:
                          type: string
                          description: Content of the comment.
                        comment_votes:
                          type: integer
                          description: Total number of votes this comment received.
                        created_at:
                          type: string
                          description: Timestamp when the comment was created.
                        updated_at:
                          type: string
                          description: Timestamp when the comment was last updated.
  /comments/{comment_id}/votes:
    get:
      summary: Retrieves votes for a specific comment.
      parameters:
        - in: path
          name: comment_id
          required: true
          schema:
            type: integer
          description: ID of the comment for which votes are requested.
      responses:
        '200':
          description: Votes for the specified comment.
          content:
            application/json:
              schema:
                type: object
                properties:
                  votes:
                    type: array
                    items:
                      type: object
                      properties:
                        voter_id:
                          type: integer
                          description: ID of the voter.
                        vote_type:
                          type: string
                          description: Type of vote (e.g., upvote, downvote).
                        created_at:
                          type: string
                          description: Timestamp when the vote was created.